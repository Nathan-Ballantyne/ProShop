{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox/SearchBox.js","components/Header/Header.js","components/Footer/Footer.js","components/Meta/Meta.js","components/Rating/Rating.js","components/Product/Product.js","actions/productActions.js","components/Loader/Loader.js","components/Message/Message.js","components/Paginate/Paginate.js","components/ProductCarousel/ProductCarousel.js","components/Screens/HomeScreen/HomeScreen.js","components/Screens/ProductScreen/ProductScreen.js","actions/cartActions.js","components/Screens/CartScreen/CartScreen.js","components/FormContainer/FormContainer.js","components/Screens/LoginScreen/LoginScreen.js","components/Screens/RegisterScreen/RegisterScreen.js","components/Screens/ProfileScreen/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps/CheckoutSteps.js","components/Screens/ShippingScreen/ShippingScreen.js","components/Screens/PaymentScreen/PaymentScreen.js","components/Screens/PlaceOrderScreen/PlaceOrderScreen.js","components/Screens/OrderScreen/OrderScreen.js","components/Screens/UserListScreen/UserListScreen.js","components/Screens/UserEditScreen/UserEditScreen.js","components/Screens/ProductListScreen/ProductListScreen.js","components/Screens/ProductEditScreen/ProductEditScreen.js","components/Screens/OrderListScreen/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existsItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userList","users","userDelete","userUpdate","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orders","orderMyList","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Meta","description","keywords","Helmet","content","defaultProps","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductsDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","varient","children","Alert","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setqty","setRating","comment","setComment","createReviewError","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","method","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setsdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","window","paypal","href","DeliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","userId","confirm","delete","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a7e20da5.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productCreateReviewReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers';\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderDeliverReducer,\n    orderMyListReducer,\n    orderListReducer,\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productCreateReview: productCreateReviewReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderMyList: orderMyListReducer,\n    orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {};\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] };\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages,\n            };\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (\n    state = { product: { reviews: [] } },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state };\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true };\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} };\n        default:\n            return state;\n    }\n};\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] };\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload };\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n\n            const existsItem = state.cartItems.find(\n                (x) => x.product === item.product\n            );\n\n            if (existsItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                        x.product === existsItem.product ? item : x\n                    ),\n                };\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                };\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    (x) => x.product !== action.payload\n                ),\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            };\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import {\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_LIST_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_RESET,\n    USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_PROFILE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { users: [] };\n        default:\n            return state;\n    }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_MY_LIST_REQUEST,\n    ORDER_MY_LIST_SUCCESS,\n    ORDER_MY_LIST_FAIL,\n    ORDER_MY_LIST_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload,\n            };\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const orderDetailsReducer = (\n    state = { loading: true, orderItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n            };\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_PAY_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderDeliverReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            };\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_DELIVER_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderMyListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_MY_LIST_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_MY_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            };\n        case ORDER_MY_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case ORDER_MY_LIST_RESET:\n            return { orders: [] };\n        default:\n            return state;\n    }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            };\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            };\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST';\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS';\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL';\nexport const ORDER_MY_LIST_RESET = 'ORDER_MY_LIST_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import axios from 'axios';\nimport {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants';\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post(\n            '/api/users/login',\n            { email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_MY_LIST_RESET });\n    dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put('/api/users/profile', user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        });\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getUserList = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get('/api/users', config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        axios.delete(`/api/users/${userId}`, config);\n\n        dispatch({ type: USER_DELETE_SUCCESS });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = axios.put(`/api/users/${user._id}`, user, config);\n\n        dispatch({ type: USER_UPDATE_SUCCESS });\n\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/');\n        }\n    };\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                placeholder='Search Products...'\n                className='mr=sm-2 ml-sm-5'></Form.Control>\n            <Button type='submit' variant='outline-success' className='p-2'>\n                Searach\n            </Button>\n        </Form>\n    );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap';\nimport { logout } from '../../actions/userActions';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                    <Navbar.Collapse id='basic-navbar-nav'>\n                        <Route\n                            render={({ history }) => (\n                                <SearchBox history={history} />\n                            )}\n                        />\n                        <Nav className='ml-auto'>\n                            <LinkContainer to='/cart'>\n                                <Nav.Link>\n                                    <i className='fas fa-shopping-cart'></i>{' '}\n                                    Cart\n                                </Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown\n                                    title={userInfo.name}\n                                    id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link>\n                                        <i className='fas fa-user'></i> Sign In\n                                    </Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>\n                                            Users\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>\n                                            Products\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>\n                                            Orders\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; ProShop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keyword' content={keywords} />\n        </Helmet>\n    );\n};\n\nMeta.defaultProps = {\n    title: 'Welcome to ProShop',\n    description: 'We sell the best eletronics for great prices',\n    keywords: 'electronics, buy electronics',\n};\n\nexport default Meta;\n","import React from 'react';\n//import PropTypes from 'prop-types';\n\nconst Rating = ({ value = 0, text, color }) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 1\n                            ? 'fas fa-star'\n                            : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                    }></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 2\n                            ? 'fas fa-star'\n                            : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                    }></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 3\n                            ? 'fas fa-star'\n                            : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                    }></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 4\n                            ? 'fas fa-star'\n                            : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                    }></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 5\n                            ? 'fas fa-star'\n                            : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                    }></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    );\n};\n\nRating.defaultProps = {\n    color: '#F8E825',\n};\n\n// Rating.propTypes = {\n//     value: PropTypes.number.isRequired,\n//     text: PropTypes.string.isRequired,\n//     color: PropTypes.string,\n// };\n\nexport default Rating;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Rating from '../Rating/Rating';\n\nconst Product = ({ product }) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as='div'>\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                <Card.Text as='div'>\n                    <Rating\n                        value={product.rating}\n                        text={`${product.numReviews} reviews`}\n                    />\n                </Card.Text>\n                <Card.Text as='h3'>${product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Product;\n","import axios from 'axios';\n\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST });\n\n        const { data } = await axios.get(\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n        );\n\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/products/${id}`, config);\n\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post('/api/products', {}, config);\n\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/products/${product._id}`,\n            product,\n            config\n        );\n\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST });\n\n        const { data } = await axios.get(`/api/products/top`);\n\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                width: '100px',\n                height: '100px',\n                margin: 'auto',\n                display: 'block',\n            }}>\n            {/* <span className='rs-only'></span> */}\n        </Spinner>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ varient, children }) => {\n    return <Alert variant={varient}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n    varient: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n    return (\n        pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x) => (\n                    <LinkContainer\n                        key={x}\n                        to={\n                            !isAdmin\n                                ? keyword\n                                    ? `/search/${keyword}/page/${x + 1}`\n                                    : `/page/${x + 1}`\n                                : `/admin/productlist/${x + 1}`\n                        }>\n                        <Pagination.Item active={x + 1 === page}>\n                            {x + 1}\n                        </Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    );\n};\n\nexport default Paginate;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Image } from 'react-bootstrap';\nimport Loader from '../Loader/Loader';\nimport Message from '../Message/Message';\nimport { listTopProducts } from '../../actions/productActions';\n\nconst ProductCarousel = () => {\n    const dispatch = useDispatch();\n\n    const productTopRated = useSelector((state) => state.productTopRated);\n    const { loading, error, products } = productTopRated;\n\n    useEffect(() => {\n        dispatch(listTopProducts());\n    }, [dispatch]);\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message varient='danger'>{error}</Message>\n    ) : (\n        <Carousel pause='hover' className='bg-dark'>\n            {products.map((product) => (\n                <Carousel.Item key={product._id}>\n                    <Link to={`products/${product._id}`}>\n                        <Image src={product.image} alt={product.name} fluid />\n                        <Carousel.Caption className='carousel-caption'>\n                            <h2>\n                                {product.name} (${product.price})\n                            </h2>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    );\n};\n\nexport default ProductCarousel;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Meta from '../../Meta/Meta';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../../../components/Product/Product';\nimport { listProducts } from '../../../actions/productActions';\nimport Loader from '../../Loader/Loader';\nimport Message from '../../Message/Message';\nimport Paginate from '../../Paginate/Paginate';\nimport ProductCarousel from '../../ProductCarousel/ProductCarousel';\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword;\n\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber));\n    }, [dispatch, keyword, pageNumber]);\n\n    return (\n        <>\n            <Meta />\n            {!keyword ? (\n                <ProductCarousel />\n            ) : (\n                <Link to='/' className='btn btn-light'>\n                    Go Back\n                </Link>\n            )}\n            <h1>Latest Products</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message varient='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Row>\n                        {products.map((product) => {\n                            return (\n                                <Col\n                                    key={product._id}\n                                    sm={12}\n                                    md={6}\n                                    lg={4}\n                                    xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    <Paginate\n                        page={page}\n                        pages={pages}\n                        keyword={keyword ? keyword : ''}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport Meta from '../../Meta/Meta';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Button, Form } from 'react-bootstrap';\nimport Rating from '../../Rating/Rating';\nimport Loader from '../../Loader/Loader';\nimport Message from '../../Message/Message';\nimport {\n    listProductsDetails,\n    createProductReview,\n} from '../../../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../../constants/productConstants';\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setqty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const productCreateReview = useSelector(\n        (state) => state.productCreateReview\n    );\n    const {\n        error: createReviewError,\n        success: successProductReview,\n    } = productCreateReview;\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review Submitted!');\n            setRating(0);\n            setComment('');\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n        }\n        dispatch(listProductsDetails(match.params.id));\n    }, [dispatch, match, successProductReview]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            createProductReview(match.params.id, {\n                rating,\n                comment,\n            })\n        );\n    };\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>\n                Go Back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Meta title={product.name} />\n                    <Row>\n                        <Col md={6}>\n                            <Image\n                                src={product.image}\n                                alt={product.name}\n                                fluid\n                            />\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating\n                                        value={product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                    />\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Price: ${product.price}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Description: {product.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Price:</Col>\n                                        <Col>${product.price}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Status:</Col>\n                                        <Col>\n                                            {product.countInStock > 0\n                                                ? 'In Stock'\n                                                : 'Out of Stock'}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                {product.countInStock > 0 && (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Qty</Col>\n                                            <Col>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={qty}\n                                                    onChange={(e) =>\n                                                        setqty(e.target.value)\n                                                    }>\n                                                    {[\n                                                        ...Array(\n                                                            product.countInStock\n                                                        ).keys(),\n                                                    ].map((x) => (\n                                                        <option\n                                                            key={x + 1}\n                                                            value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))}\n                                                </Form.Control>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                )}\n                                <ListGroup.Item>\n                                    <Button\n                                        onClick={addToCartHandler}\n                                        className='btn-block'\n                                        type='button'\n                                        disabled={product.countInStock === 0}>\n                                        Add To Cart\n                                    </Button>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && (\n                                <Message>No Reviews Yet</Message>\n                            )}\n                            <ListGroup variant='flush'>\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>\n                                            {review.createdAt.substring(0, 10)}\n                                        </p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h2>Write a Customer Review</h2>\n                                    {createReviewError && (\n                                        <Message varient='danger'>\n                                            {createReviewError}\n                                        </Message>\n                                    )}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId='rating'>\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={rating}\n                                                    onChange={(e) =>\n                                                        setRating(\n                                                            e.target.value\n                                                        )\n                                                    }>\n                                                    <option value=''>\n                                                        Select...\n                                                    </option>\n                                                    <option value='1'>\n                                                        1 - Poor\n                                                    </option>\n                                                    <option value='2'>\n                                                        2 - Fair\n                                                    </option>\n                                                    <option value='3'>\n                                                        3 - Good\n                                                    </option>\n                                                    <option value='4'>\n                                                        4 - Very Good\n                                                    </option>\n                                                    <option value='5'>\n                                                        5 - Excellent\n                                                    </option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group controlId='comment'>\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control\n                                                    as='textarea'\n                                                    row='3'\n                                                    value={comment}\n                                                    onChange={(e) =>\n                                                        setComment(\n                                                            e.target.value\n                                                        )\n                                                    }></Form.Control>\n                                            </Form.Group>\n                                            <Button\n                                                type='submit'\n                                                variant='primary'>\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    ) : (\n                                        <Message>\n                                            Please{' '}\n                                            <Link to='/login'>sign in</Link> to\n                                            write a review.{' '}\n                                        </Message>\n                                    )}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    });\n\n    localStorage.setItem(\n        'cartItems',\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    });\n\n    localStorage.setItem(\n        'cartItems',\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    });\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (method) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: method,\n    });\n\n    localStorage.setItem('paymentMethod', JSON.stringify(method));\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Row,\n    Col,\n    ListGroup,\n    Image,\n    Form,\n    Button,\n    Card,\n} from 'react-bootstrap';\nimport Message from '../../Message/Message';\nimport { addToCart, removeFromCart } from '../../../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n    const { cartItems } = cart;\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    };\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping');\n    };\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map((item) => {\n                            return (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image\n                                                src={item.image}\n                                                alt={item.name}\n                                                fluid\n                                                rounded\n                                            />\n                                        </Col>\n                                        <Col md={2}>\n                                            <Link\n                                                to={`/product/${item.product}`}>\n                                                {item.name}\n                                            </Link>\n                                        </Col>\n                                        <Col md={2}>${item.price}</Col>\n                                        <Col md={2}>\n                                            <Form.Control\n                                                as='select'\n                                                value={item.qty}\n                                                onChange={(e) =>\n                                                    dispatch(\n                                                        addToCart(\n                                                            item.product,\n                                                            Number(\n                                                                e.target.value\n                                                            )\n                                                        )\n                                                    )\n                                                }>\n                                                {[\n                                                    ...Array(\n                                                        item.countInStock\n                                                    ).keys(),\n                                                ].map((x) => (\n                                                    <option\n                                                        key={x + 1}\n                                                        value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Col>\n                                        <Col md={2}>\n                                            <Button\n                                                type='button'\n                                                varient='light'\n                                                onClick={() =>\n                                                    removeFromCartHandler(\n                                                        item.product\n                                                    )\n                                                }>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            );\n                        })}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup varient='flush'>\n                        <ListGroup.Item>\n                            <h2>\n                                Subtotal (\n                                {cartItems.reduce(\n                                    (acc, item) => acc + item.qty,\n                                    0\n                                )}\n                                ) items\n                            </h2>\n                            $\n                            {cartItems\n                                .reduce(\n                                    (acc, item) => acc + item.qty * item.price,\n                                    0\n                                )\n                                .toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}>\n                                Proceed To Checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport { login } from '../../../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message varient='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) =>\n                            setEmail(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) =>\n                            setPassword(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '}\n                    <Link\n                        to={\n                            redirect\n                                ? `/register?redirect=${redirect}`\n                                : '/register'\n                        }>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport { register } from '../../../actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Register</h1>\n            {message && <Message varient='danger'>{message}</Message>}\n            {error && <Message varient='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) =>\n                            setName(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) =>\n                            setEmail(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) =>\n                            setPassword(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) =>\n                            setConfirmPassword(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Already have an Account?{' '}\n                    <Link\n                        to={\n                            redirect ? `/login?redirect=${redirect}` : '/login'\n                        }>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport {\n    getUserDetails,\n    updateUserProfile,\n} from '../../../actions/userActions';\nimport { listMyOrders } from '../../../actions/orderActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../../../constants/userConstants';\n\nconst ProfileScreen = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const orderMyList = useSelector((state) => state.orderMyList);\n    const { loading: loadingOrders, error: errorOrders, orders } = orderMyList;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user || user.name || success) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET });\n                dispatch(getUserDetails('profile'));\n                dispatch(listMyOrders());\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user, success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(\n                updateUserProfile({ id: user._id, name, email, password })\n            );\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message varient='danger'>{message}</Message>}\n                {error && <Message varient='danger'>{error}</Message>}\n                {success && (\n                    <Message varient='success'>Profile Updated</Message>\n                )}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name}\n                            onChange={(e) =>\n                                setName(e.target.value)\n                            }></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter email'\n                            value={email}\n                            onChange={(e) =>\n                                setEmail(e.target.value)\n                            }></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) =>\n                                setPassword(e.target.value)\n                            }></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) =>\n                                setConfirmPassword(e.target.value)\n                            }></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message varient='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        responsive\n                        className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className='fas fa-times'\n                                                style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className='fas fa-times'\n                                                style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer\n                                            to={`/order/${order._id}`}>\n                                            <Button\n                                                className='btn-sm'\n                                                varient='light'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_MY_LIST_REQUEST,\n    ORDER_MY_LIST_SUCCESS,\n    ORDER_MY_LIST_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post('/api/orders', order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/${orderId}`, config);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        );\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        );\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_MY_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get('/api/orders/myorders', config);\n\n        dispatch({\n            type: ORDER_MY_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_MY_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get('/api/orders', config);\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\nimport { saveShippingAddress } from '../../../actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        history.push('/payment');\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Address'\n                        value={address}\n                        required\n                        onChange={(e) =>\n                            setAddress(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter City'\n                        value={city}\n                        required\n                        onChange={(e) =>\n                            setCity(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Postal Code'\n                        value={postalCode}\n                        required\n                        onChange={(e) =>\n                            setPostalCode(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Country'\n                        value={country}\n                        required\n                        onChange={(e) =>\n                            setCountry(e.target.value)\n                        }></Form.Control>\n                </Form.Group>\n                <Button type='submit' varient='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\nimport { savePaymentMethod } from '../../../actions/cartActions';\n\nconst PaymentScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping');\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='PayPal'\n                            name='paymentMethod'\n                            value='PayPal'\n                            checked\n                            onChange={(e) =>\n                                setPaymentMethod(e.target.value)\n                            }></Form.Check>\n                        {/* <Form.Check\n                            type='radio'\n                            label='Stripe'\n                            id='Stripe'\n                            name='paymentMethod'\n                            value='Stripe'\n                            onChange={(e) =>\n                                setPaymentMethod(e.target.value)\n                            }></Form.Check> */}\n                    </Col>\n                </Form.Group>\n                <Button type='submit' varient='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\nimport { createOrder } from '../../../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2);\n    };\n    // Calculate prices\n    cart.itemsPrice = addDecimals(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\n    cart.taxPrice = addDecimals(Number((cart.itemsPrice * 0.15).toFixed(2)));\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.shippingPrice) +\n        Number(cart.taxPrice)\n    ).toFixed(2);\n\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { order, success, error } = orderCreate;\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`);\n        }\n        // eslint-disable-next-line\n    }, [history, success]);\n\n    const placeOrderHandler = () => {\n        dispatch(\n            createOrder({\n                orderItems: cart.cartItems,\n                shippingAddress: cart.shippingAddress,\n                paymentMethod: cart.paymentMethod,\n                itemsPrice: cart.itemsPrice,\n                shippingPrice: cart.shippingPrice,\n                taxPrice: cart.taxPrice,\n                totalPrice: cart.totalPrice,\n            })\n        );\n    };\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address},{' '}\n                                {cart.shippingAddress.city},{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? (\n                                <Message>Your cart is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => {\n                                        return (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image\n                                                            src={item.image}\n                                                            alt={item.name}\n                                                            fluid\n                                                            rounded\n                                                        />\n                                                    </Col>\n                                                    <Col>\n                                                        <Link\n                                                            to={`/product/${item.product}`}>\n                                                            {item.name}\n                                                        </Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.qty} x $\n                                                        {item.price} = $\n                                                        {item.qty * item.price}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        );\n                                    })}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && (\n                                    <Message varient='danger'>{error}</Message>\n                                )}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems.length === 0}\n                                    onClick={placeOrderHandler}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport {\n    getOrderDetails,\n    payOrder,\n    deliverOrder,\n} from '../../../actions/orderActions';\nimport {\n    ORDER_PAY_RESET,\n    ORDER_DELIVER_RESET,\n} from '../../../constants/orderConstants';\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id;\n\n    const [sdkReady, setsdkReady] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    const orderPay = useSelector((state) => state.orderPay);\n    const { loading: loadingPay, success: successPay } = orderPay;\n\n    const orderDeliver = useSelector((state) => state.orderDeliver);\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n    if (!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2);\n        };\n        // Calculate prices\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce(\n                (acc, item) => acc + item.price * item.qty,\n                0\n            )\n        );\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n            script.async = true;\n            script.onload = () => {\n                setsdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n        if (!order || order._id !== orderId || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET });\n            dispatch({ type: ORDER_DELIVER_RESET });\n            dispatch(getOrderDetails(orderId));\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript();\n            } else {\n                setsdkReady(true);\n            }\n        }\n    }, [\n        order,\n        orderId,\n        dispatch,\n        successPay,\n        successDeliver,\n        userInfo,\n        history,\n    ]);\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult));\n    };\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order));\n    };\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message varient='danger'>{error}</Message>\n    ) : (\n        <>\n            <h1>Order</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>\n                                <a href={`mailto:${order.user.email}`}>\n                                    {order.user.email}\n                                </a>\n                            </p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address},{' '}\n                                {order.shippingAddress.city},{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message varient='success'>\n                                    Delivered On {order.DeliveredAt}\n                                </Message>\n                            ) : (\n                                <Message varient='danger'>\n                                    Not Delivered\n                                </Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message varient='success'>\n                                    Paid On {order.paidAt}\n                                </Message>\n                            ) : (\n                                <Message varient='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => {\n                                        return (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image\n                                                            src={item.image}\n                                                            alt={item.name}\n                                                            fluid\n                                                            rounded\n                                                        />\n                                                    </Col>\n                                                    <Col>\n                                                        <Link\n                                                            to={`/product/${item.product}`}>\n                                                            {item.name}\n                                                        </Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.qty} x $\n                                                        {item.price} = $\n                                                        {item.qty * item.price}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        );\n                                    })}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {loadingDeliver && <Loader />}\n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                order.isPaid &&\n                                !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}>\n                                            Mark as Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport { getUserList, deleteUser } from '../../../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users } = userList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userDelete = useSelector((state) => state.userDelete);\n    const { success: successDelete } = userDelete;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(getUserList());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo, successDelete]);\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id));\n        }\n    };\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message varient='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map((user) => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>\n                                    <a href={`mailto:${user.email}`}>\n                                        {user.email}\n                                    </a>\n                                </td>\n                                <td>\n                                    {user.isAdmin ? (\n                                        <i\n                                            className='fas fa-check'\n                                            style={{ color: 'green' }}></i>\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer\n                                        to={`/admin/user/${user._id}/edit`}>\n                                        <Button\n                                            variant='light'\n                                            className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button\n                                        variant='danger'\n                                        className='btn-sm'\n                                        onClick={() => {\n                                            deleteHandler(user._id);\n                                        }}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport { getUserDetails, updateUser } from '../../../actions/userActions';\nimport { USER_UPDATE_RESET } from '../../../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET });\n            history.push('/admin/userlist');\n        } else {\n            if (!user || user._id !== userId) {\n                dispatch(getUserDetails(userId));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n    }, [user, dispatch, userId, successUpdate, history]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n    };\n\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && (\n                    <Message varient='danger'>{errorUpdate}</Message>\n                )}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message varient='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter Name'\n                                value={name}\n                                onChange={(e) =>\n                                    setName(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type='email'\n                                placeholder='Enter email'\n                                value={email}\n                                onChange={(e) =>\n                                    setEmail(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='isadmin'>\n                            <Form.Check\n                                type='checkbox'\n                                label='Is Admin'\n                                checked={isAdmin}\n                                onChange={(e) =>\n                                    setIsAdmin(e.target.checked)\n                                }></Form.Check>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport Paginate from '../../Paginate/Paginate';\nimport {\n    listProducts,\n    deleteProduct,\n    createProduct,\n} from '../../../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../../../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = productDelete;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        product: createdProduct,\n    } = productCreate;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET });\n        if (!userInfo.isAdmin) {\n            history.push('/login');\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`);\n        } else {\n            dispatch(listProducts('', pageNumber));\n        }\n    }, [\n        dispatch,\n        history,\n        userInfo,\n        successDelete,\n        successCreate,\n        createdProduct,\n        pageNumber,\n    ]);\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id));\n        }\n    };\n\n    const createProductHandler = () => {\n        dispatch(createProduct());\n    };\n\n    return (\n        <>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            <h1>Users</h1>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message varient='danger'>{errorDelete}</Message>}\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message varient='danger'>{errorCreate}</Message>}\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message varient='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        responsive\n                        className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>PRICE</th>\n                                <th>CATEGORY</th>\n                                <th>BRAND</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>${product.price}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n                                    <td>\n                                        <LinkContainer\n                                            to={`/admin/product/${product._id}/edit`}>\n                                            <Button\n                                                variant='light'\n                                                className='btn-sm'>\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button\n                                            variant='danger'\n                                            className='btn-sm'\n                                            onClick={() => {\n                                                deleteHandler(product._id);\n                                            }}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Paginate page={page} pages={pages} isAdmin={true} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductListScreen;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport FormContainer from '../../FormContainer/FormContainer';\nimport {\n    listProductsDetails,\n    updateProduct,\n} from '../../../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../../../constants/productConstants';\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState(0);\n    const [description, setDescription] = useState('');\n    const [uploading, setUploading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const productUpdate = useSelector((state) => state.productUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = productUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            history.push('/admin/productlist');\n        } else {\n            if (!product || product._id !== productId) {\n                dispatch(listProductsDetails(productId));\n            } else {\n                setName(product.name);\n                setPrice(product.price);\n                setImage(product.image);\n                setBrand(product.brand);\n                setCategory(product.category);\n                setCountInStock(product.countInStock);\n                setDescription(product.description);\n            }\n        }\n    }, [product, dispatch, productId, history, successUpdate]);\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('image', file);\n        setUploading(true);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            };\n\n            const { data } = await axios.post('/api/upload', formData, config);\n\n            setImage(data);\n            setUploading(false);\n        } catch (error) {\n            console.error(error);\n            setUploading(false);\n        }\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            updateProduct({\n                _id: productId,\n                name,\n                price,\n                image,\n                brand,\n                category,\n                description,\n                countInStock,\n            })\n        );\n    };\n\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && (\n                    <Message varient='danger'>{errorUpdate}</Message>\n                )}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message varient='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter Name'\n                                value={name}\n                                onChange={(e) =>\n                                    setName(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='price'>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter Price'\n                                value={price}\n                                onChange={(e) =>\n                                    setPrice(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter Image URL'\n                                value={image}\n                                onChange={(e) =>\n                                    setImage(e.target.value)\n                                }></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler}></Form.File>\n                            {uploading && <Loader />}\n                        </Form.Group>\n                        <Form.Group controlId='brand'>\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter Brand'\n                                value={brand}\n                                onChange={(e) =>\n                                    setBrand(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='category'>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter Category'\n                                value={category}\n                                onChange={(e) =>\n                                    setCategory(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter Count In Stock'\n                                value={countInStock}\n                                onChange={(e) =>\n                                    setCountInStock(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter Description'\n                                value={description}\n                                onChange={(e) =>\n                                    setDescription(e.target.value)\n                                }></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport { listOrders } from '../../../actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders } = orderList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo]);\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message varient='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <></>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>${order.totalPrice}</td>\n                                <td>\n                                    {order.isPaid ? (\n                                        order.paidAt.substring(0, 10)\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    {order.isDelivered ? (\n                                        order.DeliveredAt.substring(0, 10)\n                                    ) : (\n                                        <i\n                                            className='fas fa-times'\n                                            style={{ color: 'red' }}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button\n                                            variant='light'\n                                            className='btn-sm'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default OrderListScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport HomeScreen from './components/Screens/HomeScreen/HomeScreen';\nimport ProductScreen from './components/Screens/ProductScreen/ProductScreen';\nimport CartScreen from './components/Screens/CartScreen/CartScreen';\nimport LoginScreen from './components/Screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './components/Screens/RegisterScreen/RegisterScreen';\nimport ProfileScreen from './components/Screens/ProfileScreen/ProfileScreen';\nimport ShippingScreen from './components/Screens/ShippingScreen/ShippingScreen';\nimport PaymentScreen from './components/Screens/PaymentScreen/PaymentScreen';\nimport PlaceOrderScreen from './components/Screens/PlaceOrderScreen/PlaceOrderScreen';\nimport OrderScreen from './components/Screens/OrderScreen/OrderScreen';\nimport UserListScreen from './components/Screens/UserListScreen/UserListScreen';\nimport UserEditScreen from './components/Screens/UserEditScreen/UserEditScreen';\nimport ProductListScreen from './components/Screens/ProductListScreen/ProductListScreen';\nimport ProductEditScreen from './components/Screens/ProductEditScreen/ProductEditScreen';\nimport OrderListScreen from './components/Screens/OrderListScreen/OrderListScreen';\n\nconst App = () => {\n    return (\n        <Router>\n            <Header />\n            <main className='py-3'>\n                <Container>\n                    <Route path='/order/:id' component={OrderScreen} />\n                    <Route path='/login' component={LoginScreen} />\n                    <Route path='/register' component={RegisterScreen} />\n                    <Route path='/shipping' component={ShippingScreen} />\n                    <Route path='/payment' component={PaymentScreen} />\n                    <Route path='/placeorder' component={PlaceOrderScreen} />\n                    <Route path='/profile' component={ProfileScreen} />\n                    <Route path='/product/:id' component={ProductScreen} />\n                    <Route path='/cart/:id?' component={CartScreen} />\n                    <Route path='/admin/userlist' component={UserListScreen} />\n                    <Route\n                        path='/admin/user/:id/edit'\n                        component={UserEditScreen}\n                    />\n                    <Route\n                        path='/admin/productlist'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/productlist/:pageNumber'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/product/:id/edit'\n                        component={ProductEditScreen}\n                    />\n                    <Route\n                        path='/admin/orderlist'\n                        component={OrderListScreen}\n                    />\n                    <Route\n                        path='/search/:keyword'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route\n                        path='/page/:pageNumber'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route\n                        path='/search/:keyword/page/:pageNumber'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route path='/' component={HomeScreen} exact />\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}